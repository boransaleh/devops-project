apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: default
  labels:
    app: stundenplan-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stundenplan-mysql

  template:
    metadata:
      name: stundenplan-data
      labels:
        app: stundenplan-mysql
    spec:
      containers:
        - name: stundenplan-mysql
          image: mysql:5.6.48
          resources:
            limits:
              cpu: 2
              memory: "2Gi"
            requests:
              cpu: 2
              memory: "2Gi"
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user

            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password

            - name: MYSQL_ROOT_HOST
              value: "%"

            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password

            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-database
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
            - mountPath: /tmp/initdb.sql
              subPath: initdb.sql
              name: mysql-dump
              readOnly: false
#          lifecycle:
#            postStart:
#              exec:
#                command: ['mysql', '-u$MYSQL_USER', '-p$MYSQL_ROOT_PASSWORD','$MYSQL_DATABASE', '<', '/tmp/initdb.sql'] i should create a job for this command with init container busybox  which waits until i get response from service

      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-claim
        - name: mysql-dump
          configMap:
            name: mysql-initdb-config


