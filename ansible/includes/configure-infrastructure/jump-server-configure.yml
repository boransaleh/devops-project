---
- hosts: server-node
  become: true
  tasks:
  - name: Update the apt package index
    become: yes
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
  - name: Install packages for apt add repository over HTTPS
    become: yes
    apt:
      name: "{{ packagesdep }}"
      force_apt_get: yes
      state: latest
      update_cache: yes
    vars:
      packagesdep:
        - git
        - apt-transport-https
        - ca-certificates
        - wget
        - software-properties-common
        - gnupg2
        - curl
        - python-setuptools
        - python-pip
        - python-backports.ssl-match-hostname
        - nfs-kernel-server
        - nfs-common
        - portmap
        - firewalld
  - name: Add Apt signing key from official docker repo
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: add docker official repository for Debian Stretch
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
      state: present
  - name: Index new repo into the cache
    become: yes
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
  - name: actually install docker
    apt:
      name: "docker-ce"
      state: latest
  - name: Install Docker Module for Python
    pip:
        name: docker

  - name: Add Apt signing key from official k8s kubectl repo
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: add k8s official repository for Debian
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
  - name: Run the equivalent of "apt-get update"
    apt:
      update_cache: yes

  - name: Install packages for apt add repository over HTTPS
    become: yes
    apt:
      name: kubectl
      force_apt_get: yes
      state: latest
      update_cache: yes

  - name: ansible create directory example
    file:
        path: /home/vagrant/.kube
        state: directory

  - name: setup kubectl config
    copy: src="kubeconfig/k8s-master/home/vagrant/.kube/config" dest=/home/vagrant/.kube/config

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
      - chown vagrant:vagrant /home/vagrant/.kube/config
      - chown vagrant:vagrant /home/vagrant/.kube

  - name: Create the directory that will be shared by NFS
    file:
      path: /srv/nfs/kubedata
      state: directory

  - name: change the permissions of Nfs Shared
    command: "{{ item }}"
    with_items:
      - chmod -R 755 /srv/nfs/kubedata
      - chown nobody:nogroup /srv/nfs/kubedata

  - name: configure export nfs
    lineinfile:
      dest: /etc/exports
      line: "/srv/nfs/kubedata *(rw,sync,no_subtree_check,no_root_squash,no_all_squash,insecure)"

  - name: run exportfs command
    command: exportfs -rav
    notify:
    - restart nfs server

  - name: open nfs port
    firewalld:
      service: nfs
      zone: public
      permanent: yes
      state: enabled
    vars:
        ansible_python_interpreter: '/usr/bin/python3'
    notify:
      - restart firewalld

  handlers:
    - name: restart nfs server
      service:
        name: nfs-server
        state: restarted
    - name: restart firewalld
      service:
       name: firewalld
       state: restarted

